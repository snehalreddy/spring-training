1. Create a class for insurance domain with the necessary attributes and with getter and setter methods.  Initialize with the necessary data and display the content of the object.
2. Create a class for flight booking with the necessary attributes with getter and setter methods.  Accept the data from the user for the created object and display the result.
3. Create a class on Employee domain with appropriate attributes with getter and setter methods.  Take the data for 3 employees and store it in a data structure (It could be ArrayList or HahsMap).  Display the employee details whose salary is > 50000. 
4. Bean Scope - Create a class for electric meter with the fields as (a) Meter no (b) Initial reading (c) Current reading (d)Color.  Define the scope as singleton for this class and assign the data.  Create another object with another meter data.  Demonostrate that singleton bean scope that after assigning the new meter, with the old meter object also new meter data is displayed.  That means only one instance of the object will be there, irrespective of the number of objects created.
5. Create a class for train reservation with the appropriate fields.  Create prototype scope for the objects.  Reserve train for 4 members and display the result. Use the data structure ArrayList/vector/HashMap for storing the data in the data structure.
6. Create a class for satillite.  This site can be visited to see the attributes for the class.  create a constructor function as init() and destructor function as destroy.  Provide them in xml file as init and destroy methods.  Initialize the object with the required data in the init() and display them in display().  
7. Modify the employee class to have the PostProcessor implemented and demonstrate the postprocessor concept.
8. Inheritance : Define a car class with the attributes.  Define BMW car and Mercedez car with the attributes.  Let both cars BMW and Mercedez have a function display_Features().  This function will display the features of the car.  Let the car be the base class for both BMW and Mercedez.  Car class has basic attributes of the car like name, cost.  basic_features (String).  Create all the objects of the class and initialize them the data.  Obtain the base class data and display in the derived class. 
 9. Create two classes named System and Processor with appropriate attributes.  Processor object is injected using Setter method of Dependency Injection.  Have a display() to display complete parameters of the system along with the Processor details.
10. Modify the above program for Depedency Injection constructor based and see the output.
11. Modify the above program using @Autowired and see the output.
12. Modify the assignment-1 to ensure the data is initialized else it should throw beanInitializationError.
13. Demonstrate AOP using advices.
